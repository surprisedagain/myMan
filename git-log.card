= git log =
better than [[git-show]] for showing multiple commit messages

== COMMAND FORM ==
    git log [-OPTIONS] <COMMIT_RANGE> [--] PATHS
    git log [-OPTIONS] <COMMIT>

Show the log of all commits reachable from <COMMIT> or in <COMMIT_RANGE>. Show
the history of the files on the PATHS (i.e. show only those commits where those
files were altered - merges can make this tricky and there are rules about what
portion of history is shown)

== EXAMPLES ==
    git log -1 docs/wrongDouble.png     # show last commit where file changed
    git log --oneline main~1..tt 
    git log <FROM_COMMIT>..<TO_COMMIT>  # FROM must be older. FROM not in, TO in
    git log HEAD~1..CURRENT             # HEAD~1 == 1 before HEAD
    git log -p -S string -- <PATH>

= OPTIONS =
	-<N>          # <N> logs before and including <BRANCH/COMMIT>

	--grep="pat"    # search pat in commit messages
	-G'pat.*'       # grep file content (regex)
	-P              # Perl regex (BRE's by default)
	-S'string'      # "pickaxe" string introduced/removed in code

	-p            # print full patch (diff) - useful in combination with -S
	--oneline     # just abbreviated SHA and top line of message
	--decorate    # show branch names - nice to combine with --oneline
	--stat        # for each modified/created file show a graph of how many
	                lines have been added/changed/removed
	--graph       # draw graph of branches
